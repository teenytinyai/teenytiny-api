#!/bin/bash

# Navigate to the node-openai test directory
cd "$(dirname "$0")"

# Check if node_modules exists, install if not
if [ ! -d "node_modules" ]; then
    echo "Installing dependencies..."
    npm install --silent
fi

# Run tests with minimal output
echo "Running Node.js OpenAI SDK integration tests..."
npm test

# Post-process XML to flatten testsuite structure
if [ -f "../reports/node-openai.xml" ]; then
    python3 -c "
import xml.etree.ElementTree as ET
import sys

try:
    tree = ET.parse('../reports/node-openai.xml')
    root = tree.getroot()
    
    # Collect all testcase elements
    testcases = []
    total_tests = 0
    total_failures = 0
    total_time = 0.0
    
    for testsuite in root.findall('testsuite'):
        total_tests += int(testsuite.get('tests', 0))
        total_failures += int(testsuite.get('failures', 0))
        total_time += float(testsuite.get('time', 0))
        
        for testcase in testsuite.findall('testcase'):
            # Update classname to suite name
            testcase.set('classname', 'node-openai')
            testcases.append(testcase)
    
    # Create new root with single testsuite
    new_root = ET.Element('testsuite')
    new_root.set('name', 'node-openai')
    new_root.set('tests', str(total_tests))
    new_root.set('failures', str(total_failures))
    new_root.set('errors', '0')
    new_root.set('time', str(total_time))
    
    # Add all testcases to new root
    for testcase in testcases:
        new_root.append(testcase)
    
    # Write flattened XML
    new_tree = ET.ElementTree(new_root)
    new_tree.write('../reports/node-openai.xml', xml_declaration=True, encoding='UTF-8')
    print('Flattened node-openai.xml successfully')
    
except Exception as e:
    print(f'Error processing XML: {e}', file=sys.stderr)
"
fi