#!/bin/bash

set -e

# Change to the directory containing this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Use environment variables or defaults
export TEENYTINY_URL=${TEENYTINY_URL:-"http://localhost:8080"}
export TEENYTINY_API_KEY=${TEENYTINY_API_KEY:-"testkey"}

# Clean up old reports
echo "Cleaning up previous test reports..."
rm -rf reports
mkdir -p reports

echo "Running TeenyTiny AI Integration Tests"
echo "Target: $TEENYTINY_URL (${TEENYTINY_API_KEY:0:7}...)"
echo

# Find all test directories with executable test scripts
test_dirs=()
for dir in */; do
    if [[ -f "$dir/test" && -x "$dir/test" ]]; then
        test_dirs+=("$dir")
    fi
done

if [[ ${#test_dirs[@]} -eq 0 ]]; then
    echo "No test directories found with executable 'test' scripts"
    exit 1
fi

echo "Found ${#test_dirs[@]} test suite(s): ${test_dirs[*]}"
echo

# Run tests in each directory
passed=0
failed=0
failed_suites=()

for dir in "${test_dirs[@]}"; do
    suite_name="${dir%/}" # Remove trailing slash
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "Running $suite_name tests..."
    echo

    if "./$dir/test" "$@"; then
        echo
        echo "✅ $suite_name: PASSED"
        ((passed++))
    else
        echo
        echo "❌ $suite_name: FAILED"
        ((failed++))
        failed_suites+=("$suite_name")
    fi
    echo
done

# Summary
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "Integration Test Summary"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✅ Passed: $passed"
echo "❌ Failed: $failed"

# Generate xunit-viewer HTML report
echo "Generating xunit-viewer HTML report..."

# Generate report using xunit-viewer with console output (both console and file)
npx -y xunit-viewer -r reports -o reports/index.html --console | tee reports/report.txt

echo "✅ Test report generated at: $SCRIPT_DIR/reports/index.html"
echo "✅ Console report saved to: $SCRIPT_DIR/reports/report.txt"
echo

if [[ $failed -gt 0 ]]; then
    echo
    echo "❌ Failed suites:"
    for suite in "${failed_suites[@]}"; do
        echo "  - $suite"
    done
    echo
    exit 1
else
    echo
    echo "🎉 All integration tests passed!"
    echo
fi
