#!/bin/bash

# Terraform wrapper script - handles environment setup and credentials
# Usage: ./tf [terraform command] [args...]
# Examples:
#   ./tf plan
#   ./tf apply
#   ./tf output
#   ./tf show

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
INFRA_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

# Only show headers for non-output commands
if [[ "$1" != "output" ]]; then
    echo -e "${BLUE}🔧 TeenyTiny AI Terraform Wrapper${NC}"
fi

# Load .env file
if [ ! -f "$INFRA_DIR/.env" ]; then
    echo -e "${RED}❌ .env file not found${NC}"
    echo "Create .env file: cp infra/.env.example infra/.env"
    echo "Then edit infra/.env with your Cloudflare API token and R2 credentials"
    exit 1
fi

if [[ "$1" != "output" ]]; then
    echo -e "${BLUE}📋 Loading environment from .env...${NC}"
fi
source "$INFRA_DIR/.env"

# Export environment variables for Terraform
export CLOUDFLARE_API_TOKEN
export CLOUDFLARE_ACCOUNT_ID

# Export R2 credentials as AWS-compatible env vars for Terraform S3 backend
export AWS_ACCESS_KEY_ID="$R2_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="$R2_SECRET_ACCESS_KEY"

# Check for required environment variables
if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
    echo -e "${RED}❌ CLOUDFLARE_API_TOKEN not set in .env file${NC}"
    echo "Edit infra/.env and add: CLOUDFLARE_API_TOKEN=your-token"
    exit 1
fi

# Check R2 credentials
if [ -z "$R2_ACCESS_KEY_ID" ] || [ -z "$R2_SECRET_ACCESS_KEY" ]; then
    echo -e "${RED}❌ R2 credentials not set in .env file${NC}"
    echo "Add R2 credentials to infra/.env:"
    echo "  R2_ACCESS_KEY_ID=your-r2-access-key-id"
    echo "  R2_SECRET_ACCESS_KEY=your-r2-secret-access-key"
    echo "Get them from: Cloudflare Dashboard → R2 → Manage R2 API Tokens"
    exit 1
fi

# Check if terraform is installed  
if ! command -v terraform &> /dev/null; then
    echo -e "${RED}❌ terraform is required but not installed${NC}"
    echo "Install with: brew install terraform"
    exit 1
fi

if [[ "$1" != "output" ]]; then
    echo -e "${GREEN}✅ Environment loaded successfully${NC}"
    echo ""
    echo -e "${BLUE}🚀 Running: terraform $*${NC}"
fi
terraform "$@"